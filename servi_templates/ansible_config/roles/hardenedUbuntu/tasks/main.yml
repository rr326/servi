---
#
# Harden Linux
#
# http://www.thefanclub.co.za/how-to/how-secure-ubuntu-1204-lts-server-part-1-basics

#
# UFW - Firewall
#
-   debug: msg="Set up UFW Firewall, opening ssh, http, https, 127.0.0.1"
-   apt:  pkg=ufw state=latest
-   command: ufw allow ssh
-   command: ufw allow http
-   command: ufw allow https 
-   command: ufw allow smtp
-   command: ufw --force  enable

#
# ssh
# YAML note - including # in quotes strings is tricky. I'm using >. See http://www.yaml.org/spec/1.2/spec.html, and test with: http://yaml-online-parser.appspot.com/
#
-   name: SSH - Do not permit root login
    lineinfile: >
        dest=/etc/ssh/sshd_config 
        state=absent  
        regexp='^[^#]*PermitRootLogin yes.*$ '
-   lineinfile: >
        dest=/etc/ssh/sshd_config 
        state=present 
        create=yes 
        line='PermitRootLogin no # Added by ansible'
-   command: service ssh restart

#
# Protect su by limiting only to admin group
#
-   name: SU - limit only to admin group
    command: dpkg-statoverride --force --update --add root admin 4750 /bin/su

#
#  Harden network with sysctl settings.
#
-   name: Harden network with sysctl settings
    lineinfile: >
        dest=/etc/sysctl.conf 
        state=present create=yes 
        regexp='^[^#]*{{ item.key }}.*$'
        line='{{ item.key }} = {{ item.val }}'
    with_items:
        -    { key: 'net.ipv4.conf.all.rp_filter', val: '1'} 
        -    { key: 'net.ipv4.conf.default.rp_filter', val: '1'} 
        -    { key: 'net.ipv4.icmp_echo_ignore_broadcasts', val: '1'} 
        -    { key: 'net.ipv4.conf.all.accept_source_route', val: '0'} 
        -    { key: 'net.ipv6.conf.all.accept_source_route', val: '0 '} 
        -    { key: 'net.ipv4.conf.default.accept_source_route', val: '0'} 
        -    { key: 'net.ipv6.conf.default.accept_source_route', val: '0'} 
        -    { key: 'net.ipv4.conf.all.send_redirects', val: '0'} 
        -    { key: 'net.ipv4.conf.default.send_redirects', val: '0'} 
        -    { key: 'net.ipv4.tcp_syncookies', val: '1'} 
        -    { key: 'net.ipv4.tcp_max_syn_backlog', val: '2048'} 
        -    { key: 'net.ipv4.tcp_synack_retries', val: '2'} 
        -    { key: 'net.ipv4.tcp_syn_retries', val: '5'} 
        -    { key: 'net.ipv4.conf.all.log_martians', val: '1'} 
        -    { key: 'net.ipv4.icmp_ignore_bogus_error_responses', val: '1'} 
        -    { key: 'net.ipv4.conf.all.accept_redirects', val: '0'} 
        -    { key: 'net.ipv6.conf.all.accept_redirects', val: '0'} 
        -    { key: 'net.ipv4.conf.default.accept_redirects', val: '0 '} 
        -    { key: 'net.ipv6.conf.default.accept_redirects', val: '0'} 
        -    { key: 'net.ipv4.icmp_echo_ignore_all', val: '1    '} 
-   command: sysctl -p


# Disable Open DNS Recursion and Remove Version Info  - BIND DNS Server.    
# >> Skipping - don't have that file. Guessing its not critical

#
# Prevent IP Spoofing.
#
-   debug: msg="Prevent IP Spoofing"
-   lineinfile: >
        dest=/etc/host.conf 
        state=absent 
        regexp='order hosts,bind'
-   lineinfile: >
        dest=/etc/host.conf 
        state=present create=yes 
        line='order bind,hosts'
-   lineinfile: >
        dest=/etc/host.conf 
        state=present create=yes 
        line='nospoof on'

#
# Scan logs and ban suspicious hosts with Fail2Ban.
#
-   name: Install fail2ban
    apt:  pkg=fail2ban state=latest
-   template: src=jail.conf.j2 dest=/etc/fail2ban/jail.conf backup=yes force=yes


#
# TODO - Reasses if my linux-hardening is necessary & sufficient
#